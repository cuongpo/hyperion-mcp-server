name: hyperion-mcp
displayName: Hyperion Blockchain MCP Server
description: Model Context Protocol server for Hyperion blockchain (testnet) interactions - wallet management, tMETIS transactions, and smart contract interactions on Chain ID 133717
version: 1.0.0
author: Hyperion MCP Team
license: MIT
homepage: https://github.com/cuongpo/hyperion-mcp-server
repository: https://github.com/cuongpo/hyperion-mcp-server

categories:
  - blockchain
  - cryptocurrency
  - wallet
  - defi

keywords:
  - hyperion
  - hyperion-testnet
  - blockchain
  - cryptocurrency
  - wallet
  - tmetis
  - smart-contracts
  - defi
  - mcp
  - model-context-protocol
  - chain-133717

runtime: typescript

build:
  command: npm run build
  outputDir: build

install:
  command: npm install

start:
  command: node build/smithery-server.js

environment:
  required:
    - HYPERION_RPC_URL
  optional:
    - HYPERION_CHAIN_ID
    - HYPERION_NETWORK_NAME
    - HYPERION_CURRENCY_SYMBOL
    - HYPERION_EXPLORER_URL
    - HYPERION_PRIVATE_KEYS
    - HYPERION_ADDRESSES
    - HYPERION_CURRENT_ADDRESS

tools:
  - name: create_wallet
    description: Create a new Hyperion wallet with generated mnemonic
    category: wallet
  
  - name: import_wallet
    description: Import existing wallet using private key or mnemonic
    category: wallet
  
  - name: list_wallets
    description: List all available wallets
    category: wallet
  
  - name: get_balance
    description: Get wallet balance (native or ERC20 tokens)
    category: query
  
  - name: send_transaction
    description: Send native tokens or ERC20 tokens
    category: transaction
  
  - name: get_transaction
    description: Get transaction details by hash
    category: query
  
  - name: get_block
    description: Get block information
    category: query
  
  - name: get_network_info
    description: Get network status and information
    category: query
  
  - name: estimate_gas
    description: Estimate transaction gas costs
    category: utility
  
  - name: set_current_wallet
    description: Set active wallet for transactions
    category: wallet
  
  - name: get_current_wallet
    description: Get current active wallet info
    category: wallet

examples:
  - name: Basic Wallet Operations
    description: Create wallet, check balance, send transaction
    code: |
      // Create a new wallet
      await mcp.callTool('create_wallet', { name: 'MyWallet' });
      
      // Check balance
      await mcp.callTool('get_balance', { 
        address: '0x742d35Cc6634C0532925a3b8D4C9db96590c6C87' 
      });
      
      // Send transaction
      await mcp.callTool('send_transaction', {
        to: '0x1234567890123456789012345678901234567890',
        amount: '0.1'
      });

  - name: Network Information
    description: Get network status and block information
    code: |
      // Get network info
      await mcp.callTool('get_network_info', {});
      
      // Get latest block
      await mcp.callTool('get_block', {});
      
      // Estimate gas for transaction
      await mcp.callTool('estimate_gas', {
        to: '0x1234567890123456789012345678901234567890',
        value: '0.1'
      });

documentation:
  setup: |
    1. Install Node.js 18 or higher
    2. Clone the repository
    3. Run `npm install`
    4. Configure environment variables
    5. Run `npm run build`
    6. Start with `npm start`
  
  configuration: |
    Configure environment variables:
    - HYPERION_RPC_URL: Blockchain RPC endpoint (default: https://hyperion-testnet.metisdevops.link)
    - HYPERION_CHAIN_ID: Chain ID (default: 133717)
    - HYPERION_NETWORK_NAME: Network name (default: Hyperion Testnet)
    - HYPERION_CURRENCY_SYMBOL: Currency symbol (default: tMETIS)
    - HYPERION_EXPLORER_URL: Block explorer URL
  
  usage: |
    The server provides tools for:
    - Wallet management (create, import, list)
    - Balance queries (native and ERC20 tokens)
    - Transaction operations (send, query)
    - Blockchain queries (blocks, network info)
    - Gas estimation and optimization

support:
  documentation: https://github.com/cuongpo/hyperion-mcp-server/blob/main/README.md
  issues: https://github.com/cuongpo/hyperion-mcp-server/issues
  discussions: https://github.com/cuongpo/hyperion-mcp-server/discussions
